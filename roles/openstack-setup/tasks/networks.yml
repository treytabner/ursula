---
- name: neutron networks
  neutron_network: name={{ item.name }}
                   provider_network_type={{ item.network_type }}
                   state=present
                   shared={{ item.shared }}
                   router_external={{ item.external }}
                   provider_segmentation_id={{ item.segmentation_id }}
                   provider_physical_network={{ item.provider_physical_network }}
                   auth_url={{ endpoints.auth_uri }}
                   login_tenant_name=admin
                   login_username=provider_admin
                   login_password={{ secrets.provider_admin_password }}
  with_items: neutron.networks
  run_once: true

# FIXME with Ansible 1.9 we can use |default(omit) instead of duplicate tasks with
# when guards
- name: neutron subnets
  neutron_subnet: name={{ item.name }}
                  network_name={{ item.network_name }}
                  cidr={{ item.cidr }}
                  enable_dhcp={{ item.enable_dhcp }}
                  gateway_ip={{ item.gateway_ip }}
                  ip_version={{ item.ip_version }}
                  dns_nameservers={{ item.dns_nameservers }}
                  state=present
                  auth_url={{ endpoints.auth_uri }}
                  login_tenant_name=admin
                  login_username=provider_admin
                  login_password={{ secrets.provider_admin_password }}
  with_items: neutron.subnets
  when: "'ipv6_address_mode' not in item and 'ipv6_ra_mode' not in item"
  run_once: true

- name: neutron subnets
  neutron_subnet: name={{ item.name }}
                  network_name={{ item.network_name }}
                  cidr={{ item.cidr }}
                  enable_dhcp={{ item.enable_dhcp }}
                  gateway_ip={{ item.gateway_ip }}
                  ip_version={{ item.ip_version }}
                  dns_nameservers={{ item.dns_nameservers }}
                  ipv6_address_mode={{ item.ipv6_address_mode }}
                  ipv6_ra_mode={{ item.ipv6_ra_mode }}
                  state=present
                  auth_url={{ endpoints.auth_uri }}
                  login_tenant_name=admin
                  login_username=provider_admin
                  login_password={{ secrets.provider_admin_password }}
  with_items: neutron.subnets
  when: "'ipv6_address_mode' in item and 'ipv6_ra_mode' in item"
  run_once: true

- name: neutron routers
  neutron_router: state=present
                  name={{ item.name }}
                  tenant_name={{ item.tenant_name }}
                  admin_state_up=true
                  auth_url={{ endpoints.auth_uri }}
                  login_tenant_name=admin
                  login_username=provider_admin
                  login_password={{ secrets.provider_admin_password }}
  with_items: neutron.routers
  run_once: true

- name: neutron routers gateways
  neutron_router_gateway: state=present
                          router_name={{ item.name }}
                          network_name=external
                          enable_snat={{ item.enable_snat|default(true) }}
                          auth_url={{ endpoints.auth_uri }}
                          login_tenant_name=admin
                          login_username=provider_admin
                          login_password={{ secrets.provider_admin_password }}
  with_items: neutron.routers
  run_once: true

- name: neutron router interfaces
  neutron_router_interface: router_name={{ item.router_name }}
                            subnet_name={{ item.subnet_name }}
                            tenant_name={{ item.tenant_name }}
                            state=present
                            auth_url={{ endpoints.auth_uri }}
                            login_tenant_name=admin
                            login_username=provider_admin
                            login_password={{ secrets.provider_admin_password }}
  with_items: neutron.router_interfaces
  run_once: true
